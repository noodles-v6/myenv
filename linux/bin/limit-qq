#!/usr/bin/env perl

use v5.12;
use warnings;
use strict;
use DateTime;
use Log::Trace log => '/var/log/limit-qq.log';

our $qq_launched_in_memory = 0;
our $latest_launch_time = get_qq_today_launch_time();

clear_old_log();
monitor_qq();

######################

sub monitor_qq {
    while (1) {
        if (is_qq_launch()) {    
            if (!$qq_launched_in_memory) {
                TRACE("QQ launch=start, total=$latest_launch_time seconds");
                $qq_launched_in_memory = 1;
            }

            if ($latest_launch_time > 1.5*60*60) {
                # run applescript
                say `ps -ef | grep QQ | grep -v grep | awk '{print \$2}' | xargs kill -9`;
                TRACE("QQ launch time great than 1.5 hour, force exit!!!");
                $qq_launched_in_memory = 0;
            } else {
                $latest_launch_time += 20 # add 20s
            }
        } else {
            if ($qq_launched_in_memory) {
                TRACE("QQ launch=stop, total=$latest_launch_time seconds");
                $qq_launched_in_memory = 0;
            }
        }

        sleep 20;
    }
}

sub clear_old_log {

}

sub get_qq_today_launch_time {
    open my $fh, "/var/log/limit-qq.log"
        or return 0; #seconds

    my $today = DateTime->today(time_zone=>'local')->ymd();
    my @logs = reverse(<$fh>);
    close $fh;

    for  (@logs) {
        if (/.*$today.*total=(\d+)/) {
            return $1; 
        }
    }

    0;
}

sub is_qq_launch {
    my @out = `/bin/ps aux | grep QQ | grep -v grep`;
    if (@out) { 1 } else { 0 }
}
